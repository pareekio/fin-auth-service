
spring.profiles.active=local

server.port=8080
spring.application.name=auth-service

# Database Configuration
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.provider.google.issuer-uri=https://accounts.google.com

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=86400000  # 1 day in milliseconds

# Kafka Configuration (if needed later)
spring.kafka.bootstrap-servers=${KAFKA_BROKER}
spring.kafka.consumer.group-id=auth-group

spring.jpa.properties.hibernate.id.new_generator_mappings=true

# Logging
logging.level.io.pareek.fin.auth=DEBUG
